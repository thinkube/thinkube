# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

---
# 48_test_github_cli.yaml - Test GitHub CLI (gh) configuration
#
# Purpose:
#   Verify GitHub CLI installation and proper configuration
#
# Requirements:
#   - GitHub CLI must be installed
#   - Valid GitHub authentication must be configured
#
# Run with:
#   ansible-playbook -i inventory/inventory.yaml ansible/00_initial_setup/48_test_github_cli.yaml

- name: Test GitHub CLI Configuration
  hosts: management
  gather_facts: true
  become: false
  
  tasks:
    - name: Display test intro message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          🔍 Testing GitHub CLI Configuration ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          This playbook will verify that GitHub CLI (gh) is properly
          installed and configured on the system.
          
          ═════════════════════════════════════════════════════════
    
    # Phase 1: Verify GitHub CLI installation
    - name: Check if GitHub CLI is installed
      ansible.builtin.command: which gh
      register: gh_present
      changed_when: false
      failed_when: false
    
    - name: Verify GitHub CLI installation
      ansible.builtin.assert:
        that: "gh_present.rc == 0"
        fail_msg: "GitHub CLI (gh) is not installed. Please run 40_setup_github_cli.yaml first."
        success_msg: "✓ GitHub CLI (gh) is installed"
    
    - name: Check GitHub CLI version
      ansible.builtin.command: gh --version
      register: gh_version
      changed_when: false
      when: gh_present.rc == 0
    
    - name: Display GitHub CLI version
      ansible.builtin.debug:
        msg: "GitHub CLI version: {{ gh_version.stdout_lines[0] | regex_replace('gh version ', '') }}"
      when: gh_present.rc == 0 and gh_version.stdout is defined
    
    # Phase 2: Verify GitHub CLI authentication
    - name: Check GitHub CLI authentication
      ansible.builtin.command: gh auth status
      register: gh_auth
      changed_when: false
      failed_when: false
      when: gh_present.rc == 0
    
    - name: Verify GitHub CLI authentication
      ansible.builtin.assert:
        that: "gh_auth.rc == 0"
        fail_msg: "GitHub CLI is not authenticated. Please check your authentication configuration."
        success_msg: "✓ GitHub CLI is properly authenticated"
      when: gh_present.rc == 0
    
    # Phase 3: Verify GitHub CLI configuration
    - name: Check if configuration files exist
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.config/gh/{{ item }}"
      register: gh_files
      loop:
        - "config.yml"
        - "hosts.yml"
    
    - name: Verify GitHub CLI configuration files
      ansible.builtin.assert:
        that: "item.stat.exists"
        fail_msg: "GitHub CLI configuration file {{ item.item }} does not exist"
        success_msg: "✓ GitHub CLI configuration file {{ item.item }} exists"
      loop: "{{ gh_files.results }}"
    
    # Phase 4: Verify GitHub CLI functionality
    - name: Test GitHub CLI aliases
      ansible.builtin.command: gh alias list
      register: gh_aliases
      changed_when: false
      failed_when: false
      when: gh_present.rc == 0 and gh_auth.rc == 0
    
    - name: Display GitHub CLI aliases
      ansible.builtin.debug:
        msg: "GitHub CLI aliases:\n{{ gh_aliases.stdout }}"
      when: gh_present.rc == 0 and gh_auth.rc == 0 and gh_aliases.stdout is defined
    
    - name: Verify GitHub CLI extensions
      ansible.builtin.command: gh extension list
      register: gh_extensions
      changed_when: false
      failed_when: false
      when: gh_present.rc == 0 and gh_auth.rc == 0
    
    - name: Display GitHub CLI extensions
      ansible.builtin.debug:
        msg: "GitHub CLI extensions:\n{{ gh_extensions.stdout }}"
      when: gh_present.rc == 0 and gh_auth.rc == 0 and gh_extensions.stdout is defined
    
    # Final status message
    - name: Display final test results
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          {% if gh_present.rc == 0 and gh_auth.rc == 0 %}
          ✅ GitHub CLI Test PASSED ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          GitHub CLI is properly installed and configured:
          - GitHub CLI is installed: version {{ gh_version.stdout_lines[0] | regex_replace('gh version ', '') }}
          - Authentication is working
          - Configuration files exist
          - Aliases and extensions are configured
          
          You can now use GitHub CLI to interact with GitHub repositories.
          
          {% else %}
          ❌ GitHub CLI Test FAILED ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          GitHub CLI is not properly installed or configured:
          {% if gh_present.rc != 0 %}
          - GitHub CLI is not installed. Please run 40_setup_github_cli.yaml first.
          {% elif gh_auth.rc != 0 %}
          - GitHub CLI is not authenticated. Please check your authentication configuration.
          {% endif %}
          
          Please run 40_setup_github_cli.yaml to install and configure GitHub CLI.
          
          {% endif %}
          ═════════════════════════════════════════════════════════