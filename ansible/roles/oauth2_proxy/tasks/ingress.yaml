# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

# roles/oauth2_proxy/tasks/ingress.yaml
---
# Create OAuth2 Proxy Ingress

- name: Debug Ingress settings
  debug:
    msg:
      - "Ingress name: {{ oauth2_proxy_ingress_name }}"
      - "Namespace: {{ oauth2_proxy_namespace }}"
      - "Host: {{ oauth2_proxy_ingress_host }}"
      - "Path: {{ oauth2_proxy_ingress_path }}"
      - "TLS enabled: {{ oauth2_proxy_ingress_tls_enabled }}"
      - "TLS secret: {{ oauth2_proxy_ingress_tls_secret_name }}"
  when: oauth2_proxy_debug | bool

# Use a conditional for TLS configuration to handle it properly
- name: Create OAuth2 Proxy Ingress with TLS
  kubernetes.core.k8s:
    kubeconfig: "{{ oauth2_proxy_kubeconfig | default(omit) }}"
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ oauth2_proxy_ingress_name }}"
        namespace: "{{ oauth2_proxy_namespace }}"
        annotations: "{{ oauth2_proxy_ingress_annotations }}"
      spec:
        ingressClassName: "{{ oauth2_proxy_ingress_class }}"
        tls:
          - hosts:
              - "{{ oauth2_proxy_ingress_host }}"
            secretName: "{{ oauth2_proxy_ingress_tls_secret_name }}"
        rules:
          - host: "{{ oauth2_proxy_ingress_host }}"
            http:
              paths:
                - path: "{{ oauth2_proxy_ingress_path }}"
                  pathType: "{{ oauth2_proxy_ingress_path_type }}"
                  backend:
                    service:
                      name: "{{ oauth2_proxy_name }}"
                      port:
                        number: "{{ oauth2_proxy_service_port }}"
  when: oauth2_proxy_ingress_tls_enabled | default(true) | bool

# Alternative version without TLS
- name: Create OAuth2 Proxy Ingress without TLS
  kubernetes.core.k8s:
    kubeconfig: "{{ oauth2_proxy_kubeconfig | default(omit) }}"
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ oauth2_proxy_ingress_name }}"
        namespace: "{{ oauth2_proxy_namespace }}"
        annotations: "{{ oauth2_proxy_ingress_annotations }}"
      spec:
        ingressClassName: "{{ oauth2_proxy_ingress_class }}"
        rules:
          - host: "{{ oauth2_proxy_ingress_host }}"
            http:
              paths:
                - path: "{{ oauth2_proxy_ingress_path }}"
                  pathType: "{{ oauth2_proxy_ingress_path_type }}"
                  backend:
                    service:
                      name: "{{ oauth2_proxy_name }}"
                      port:
                        number: "{{ oauth2_proxy_service_port }}"
  when: not (oauth2_proxy_ingress_tls_enabled | default(true) | bool)

- name: Debug OAuth2 Proxy Ingress creation
  debug:
    msg: "Created OAuth2 Proxy Ingress '{{ oauth2_proxy_ingress_name }}' for host '{{ oauth2_proxy_ingress_host }}'"
  when: oauth2_proxy_debug | bool