# Copyright 2025 Alejandro MartÃ­nez CorriÃ¡ and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

# Jupyter ML CPU - Machine Learning development environment without GPU
# Base: Jupyter SciPy Notebook (Python 3.12)
# Includes: PyTorch CPU, ML libraries, and all Thinkube service clients

FROM {{ harbor_registry }}/library/jupyter-scipy-notebook:latest

USER root

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        wget \
        curl \
        vim \
        build-essential \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

USER $NB_UID

# Install PyTorch CPU and ML libraries
# Versions will be determined by MCP tk-package-version
RUN pip install --no-cache-dir \
    torch \
    torchvision \
    pandas \
    scikit-learn \
    matplotlib \
    seaborn \
    plotly

# Install Thinkube service clients - Deployed services
RUN pip install --no-cache-dir \
    psycopg2-binary \
    redis \
    qdrant-client \
    opensearch-py \
    mlflow \
    boto3

# Install Thinkube service clients - Planned services
RUN pip install --no-cache-dir \
    weaviate-client \
    litellm \
    label-studio-sdk

# Install common utilities
RUN pip install --no-cache-dir \
    python-dotenv \
    requests \
    httpx \
    pydantic

# Copy Thinkube environment configuration
USER root
COPY .thinkube_env /home/jovyan/.thinkube_env
RUN chown $NB_UID:$NB_GID /home/jovyan/.thinkube_env
USER $NB_UID

# Source Thinkube environment in bashrc
RUN echo 'if [ -f /home/jovyan/.thinkube_env ]; then source /home/jovyan/.thinkube_env; fi' >> /home/jovyan/.bashrc

# Copy examples to /opt where they won't be overlaid by volume mounts
USER root
RUN mkdir -p /opt/thinkube/examples
COPY thinkube_services.ipynb /opt/thinkube/examples/thinkube_services.ipynb
RUN chmod -R 755 /opt/thinkube

# Copy startup script (templated with correct image name)
COPY startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh
USER $NB_UID

WORKDIR /home/jovyan

# Expose JupyterLab port
EXPOSE 8888

# Start JupyterLab using startup script
CMD ["/usr/local/bin/startup.sh", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]

# ðŸ¤– AI-assisted