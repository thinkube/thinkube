# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

---
# ansible/40_thinkube/core/seaweedfs/11_deploy_csi.yaml
# Description:
#   Deploy SeaweedFS CSI driver to enable Kubernetes native storage
#   Provides dynamic PVC provisioning backed by SeaweedFS
#
# Requirements:
#   - SeaweedFS must be deployed (10_deploy.yaml)
#   - Helm must be installed
#   - kubectl access configured
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/core/seaweedfs/11_deploy_csi.yaml
#
# Variables from inventory:
#   - seaweedfs_namespace: SeaweedFS namespace (default: seaweedfs)
#   - kubectl_bin: Path to kubectl binary
#   - kubeconfig: Path to kubeconfig file
#   - helm_bin: Path to helm binary

- name: Deploy SeaweedFS CSI Driver
  hosts: microk8s_control_plane
  become: false
  gather_facts: true

  vars:
    csi_driver_version: "0.2.3"
    kubeconfig: /var/snap/microk8s/current/credentials/client.config
    helm_bin: /snap/bin/microk8s.helm3

  tasks:
    - name: Add SeaweedFS CSI Helm repository
      ansible.builtin.command:
        cmd: "{{ helm_bin }} repo add seaweedfs-csi https://seaweedfs.github.io/seaweedfs-csi-driver/helm"
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      register: helm_repo_add
      changed_when: "'has been added' in helm_repo_add.stdout"
      failed_when:
        - helm_repo_add.rc != 0
        - "'already exists' not in helm_repo_add.stderr"

    - name: Update Helm repositories
      ansible.builtin.command:
        cmd: "{{ helm_bin }} repo update"
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      changed_when: false

    - name: Check if CSI driver is already installed
      ansible.builtin.command:
        cmd: "{{ helm_bin }} list -n {{ seaweedfs_namespace }} -q"
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      register: helm_list
      changed_when: false

    - name: Get SeaweedFS filer service endpoint
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: v1
        kind: Service
        namespace: "{{ seaweedfs_namespace }}"
        name: seaweedfs-filer
      register: filer_service
      failed_when: filer_service.resources | length == 0

    - name: Set filer endpoint
      ansible.builtin.set_fact:
        filer_endpoint: "seaweedfs-filer.{{ seaweedfs_namespace }}:8888"

    - name: Deploy SeaweedFS CSI driver using Helm
      ansible.builtin.command:
        cmd: >
          {{ helm_bin }} upgrade --install seaweedfs-csi-driver
          seaweedfs-csi/seaweedfs-csi-driver
          --namespace {{ seaweedfs_namespace }}
          --version {{ csi_driver_version }}
          --set seaweedfsFiler="{{ filer_endpoint }}"
          --set storageClass.create=true
          --set storageClass.name=seaweedfs-storage
          --set storageClass.reclaimPolicy=Retain
          --wait
          --timeout 5m
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      when: "'seaweedfs-csi-driver' not in helm_list.stdout"
      register: csi_deploy

    - name: Wait for CSI driver pods to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: apps/v1
        kind: DaemonSet
        namespace: "{{ seaweedfs_namespace }}"
        name: seaweedfs-csi-driver-node
      register: csi_daemonset
      until:
        - csi_daemonset.resources | length > 0
        - csi_daemonset.resources[0].status.numberReady is defined
        - csi_daemonset.resources[0].status.numberReady == csi_daemonset.resources[0].status.desiredNumberScheduled
      retries: 30
      delay: 10

    - name: Verify CSI controller is running
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: v1
        kind: Pod
        namespace: "{{ seaweedfs_namespace }}"
        label_selectors:
          - app.kubernetes.io/component=controller
          - app.kubernetes.io/name=seaweedfs-csi-driver
      register: csi_controller
      until: csi_controller.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
      retries: 30
      delay: 10

    - name: Verify storage class was created
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: storage.k8s.io/v1
        kind: StorageClass
        name: seaweedfs-storage
      register: storage_class
      failed_when: storage_class.resources | length == 0

    - name: Display CSI driver status
      ansible.builtin.debug:
        msg:
          - "SeaweedFS CSI Driver deployment complete"
          - "-----------------------------------"
          - "StorageClass: seaweedfs-storage"
          - "CSI Driver Nodes: {{ csi_daemonset.resources[0].status.numberReady }}/{{ csi_daemonset.resources[0].status.desiredNumberScheduled }}"
          - "Filer Endpoint: {{ filer_endpoint }}"
          - "-----------------------------------"
          - "You can now create PVCs with storageClassName: seaweedfs-storage"