---
# ansible/40_thinkube/core/thinkube-control/14_deploy_tk_package_version.yaml
# Description:
#   Deploy tk-package-version server as part of thinkube-control
#   Provides package version checking tools for LLMs through MCP protocol with Streamable HTTP transport
#
# Requirements:
#   - MicroK8s must be installed and running
#   - thinkube-control namespace must exist
#   - Harbor registry must be accessible with mirrored image
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/core/thinkube-control/14_deploy_mcp_package_version.yaml
#
# Variables from inventory:
#   - domain_name: Domain for ingress (e.g., thinkube.com)
#   - container_registry: Harbor registry URL
#   - harbor_robot_user: Robot account username for Harbor
#   - harbor_robot_token: Robot account token for Harbor
#
# ðŸ¤– [AI-assisted]

- name: Deploy MCP Package Version Server
  hosts: microk8s_control_plane
  gather_facts: true
  any_errors_fatal: true

  vars:
    k8s_namespace: "thinkube-control"
    app_name: "tk-package-version"
    container_registry: "registry.{{ domain_name }}"
    container_image: "{{ container_registry }}/library/tk-package-version:latest"
    service_port: 18080
    kubeconfig: "/var/snap/microk8s/current/credentials/client.config"

  tasks:
    - name: Ensure namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ k8s_namespace }}"

    - name: Deploy MCP Package Version service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ app_name }}"
            namespace: "{{ k8s_namespace }}"
          spec:
            selector:
              app: "{{ app_name }}"
            ports:
              - port: "{{ service_port }}"
                targetPort: "{{ service_port }}"
                protocol: TCP
                name: http
            type: ClusterIP

    - name: Deploy MCP Package Version deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: "{{ app_name }}"
            namespace: "{{ k8s_namespace }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: "{{ app_name }}"
            template:
              metadata:
                labels:
                  app: "{{ app_name }}"
              spec:
                imagePullSecrets:
                  - name: harbor-pull-secret
                containers:
                  - name: "{{ app_name }}"
                    image: "{{ container_image }}"
                    imagePullPolicy: Always
                    ports:
                      - containerPort: "{{ service_port }}"
                    env:
                      - name: BASE_URL
                        value: "https://control.{{ domain_name }}/tk-package-version"
                      - name: PORT
                        value: "18080"
                      - name: LOG_LEVEL
                        value: "info"
                      - name: CACHE_TTL
                        value: "300"
                    resources:
                      requests:
                        memory: "64Mi"
                        cpu: "50m"
                      limits:
                        memory: "256Mi"
                        cpu: "500m"

    - name: Configure ingress for MCP Package Version
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: "{{ app_name }}"
            namespace: "{{ k8s_namespace }}"
            annotations:
              cert-manager.io/cluster-issuer: "thinkube-issuer"
              nginx.ingress.kubernetes.io/rewrite-target: "/$2"
              nginx.ingress.kubernetes.io/proxy-body-size: "10m"
              nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
              nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          spec:
            ingressClassName: nginx
            tls:
              - hosts:
                  - "control.{{ domain_name }}"
                secretName: thinkube-control-tls-secret
            rules:
              - host: "control.{{ domain_name }}"
                http:
                  paths:
                    - path: /tk-package-version(/|$)(.*)
                      pathType: ImplementationSpecific
                      backend:
                        service:
                          name: "{{ app_name }}"
                          port:
                            number: "{{ service_port }}"

    - name: Wait for deployment to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: apps/v1
        kind: Deployment
        name: "{{ app_name }}"
        namespace: "{{ k8s_namespace }}"
        wait: true
        wait_condition:
          type: Progressing
          status: "True"
        wait_timeout: 60
      register: deployment_result

    - name: Display deployment status
      ansible.builtin.debug:
        msg:
          - "tk-package-version deployed successfully"
          - "Service URL: https://control.{{ domain_name }}/tk-package-version"
          - "MCP endpoint: https://control.{{ domain_name }}/tk-package-version/mcp"
          - "Health endpoint: https://control.{{ domain_name }}/tk-package-version/health"