# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

---
# ansible/40_thinkube/core/argocd/12_get_credentials.yaml
# Description:
#   Retrieve ArgoCD admin credentials from Kubernetes secret and save to .env file
#
# Requirements:
#   - MicroK8s Kubernetes cluster
#   - ArgoCD deployed (run 11_deploy.yaml first)
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/core/argocd/12_get_credentials.yaml
#
# Variables from inventory:
#   - kubectl_bin: Path to kubectl binary
#
# Dependencies:
#   - CORE-001: MicroK8s Control Node
#   - CORE-009: ArgoCD (11_deploy.yaml)

- name: Get ArgoCD Admin Credentials
  hosts: k8s_control_plane
  gather_facts: true
  vars:
    argocd_namespace: argocd
    env_file_path: "{{ ansible_env.HOME }}/.env"  # Path to the .env file
  tasks:
    - name: Get admin password from initial-admin-secret
      ansible.builtin.shell: |
        {{ kubectl_bin }} -n {{ argocd_namespace }} get secret argocd-initial-admin-secret \
          -o jsonpath="{.data.password}" | base64 -d
      register: admin_password
      changed_when: false
      failed_when: admin_password.rc != 0
      
    - name: Display ArgoCD credentials
      ansible.builtin.debug:
        msg:
          - "ArgoCD Credentials:"
          - "Username: admin"  # ArgoCD uses 'admin' as the default
          - "Password: {{ admin_password.stdout }}"
          - "Note: The password will be changed to match ADMIN_PASSWORD by the 13_setup_serviceaccount.yaml playbook"
    
    ########################################################################
    # SAVE CREDENTIALS TO .ENV FILE
    ########################################################################
    - name: Check if .env file exists
      ansible.builtin.stat:
        path: "{{ env_file_path }}"
      register: env_file_stat

    - name: Create .env file if it doesn't exist
      ansible.builtin.file:
        path: "{{ env_file_path }}"
        state: touch
        mode: '0600'
      when: not env_file_stat.stat.exists

    - name: Update or add ARGOCD_PASSWORD in .env file
      ansible.builtin.lineinfile:
        path: "{{ env_file_path }}"
        regexp: '^ARGOCD_PASSWORD='
        line: 'ARGOCD_PASSWORD="{{ admin_password.stdout }}"'
        state: present
        create: true
        mode: '0600'
      no_log: true