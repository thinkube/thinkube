"""
Django Settings Overlay for CVAT OAuth2 Proxy SSO Integration

This settings file extends CVAT's base settings to enable RemoteUserMiddleware.
It configures Django to authenticate users from OAuth2 proxy headers.

Generated by Thinkube deployment automation
"""

# Import all base settings
from cvat.settings.production import *

# Add OAuth2ProxyRemoteUserMiddleware after AuthenticationMiddleware
# This must be added after django.contrib.auth.middleware.AuthenticationMiddleware
MIDDLEWARE_POSITION = None
for i, middleware in enumerate(MIDDLEWARE):
    if middleware == 'django.contrib.auth.middleware.AuthenticationMiddleware':
        MIDDLEWARE_POSITION = i + 1
        break

if MIDDLEWARE_POSITION is not None:
    MIDDLEWARE = list(MIDDLEWARE)
    MIDDLEWARE.insert(MIDDLEWARE_POSITION, 'cvat.apps.thinkube_auth.middleware.OAuth2ProxyRemoteUserMiddleware')
else:
    # Fallback: append at the end if AuthenticationMiddleware not found
    MIDDLEWARE = MIDDLEWARE + ['cvat.apps.thinkube_auth.middleware.OAuth2ProxyRemoteUserMiddleware']

# Add OAuth2ProxyRemoteUserBackend as the first authentication backend
# This allows it to take priority over ModelBackend
AUTHENTICATION_BACKENDS = [
    'cvat.apps.thinkube_auth.middleware.OAuth2ProxyRemoteUserBackend',
] + AUTHENTICATION_BACKENDS