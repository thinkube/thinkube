---
# ansible/40_thinkube/optional/cvat/17_configure_discovery.yaml
# Description:
#   Configure service discovery for CVAT
#   Registers the service with metadata for thinkube-control
#
# Requirements:
#   - MicroK8s must be installed and running
#   - CVAT must be deployed
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/optional/cvat/17_configure_discovery.yaml
#
# Variables from inventory:
#   - domain_name: Base domain for the cluster
#   - kubeconfig: Path to kubeconfig file
#
# ðŸ¤– [AI-generated]

- name: Configure CVAT service discovery
  hosts: microk8s_control_plane
  gather_facts: true

  vars:
    cvat_namespace: cvat
    cvat_hostname: "cvat.{{ domain_name }}"

  tasks:
    - name: Get admin credentials
      ansible.builtin.set_fact:
        admin_username: "{{ admin_username }}"
        admin_password: "{{ lookup('env', 'ADMIN_PASSWORD') | default(lookup('env', 'ANSIBLE_BECOME_PASSWORD'), true) }}"

    - name: Verify required variables are defined
      ansible.builtin.assert:
        that:
          - domain_name is defined
          - kubeconfig is defined
        fail_msg: "Required variables are not defined"

    - name: Create service discovery ConfigMap
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: thinkube-service-config
            namespace: "{{ cvat_namespace }}"
            labels:
              thinkube.io/managed: "true"
              thinkube.io/service-type: "optional"
              thinkube.io/service-name: "cvat"
          data:
            service.yaml: |
              service:
                name: cvat
                display_name: "CVAT"
                description: "Computer Vision Annotation Tool for image and video labeling"
                type: optional
                category: ai
                icon: /icons/tk_design.svg

                endpoints:
                  - name: dashboard
                    type: http
                    url: "https://{{ cvat_hostname }}"
                    health_url: "http://cvat-backend.{{ cvat_namespace }}.svc.cluster.local:8080/api/server/about"
                    description: "Annotation interface"
                    primary: true
                    internal: true
                  - name: api
                    type: http
                    url: "https://{{ cvat_hostname }}/api"
                    description: "REST API endpoint"

                dependencies:
                  - postgresql
                  - valkey
                  - clickhouse

                scaling:
                  resource_type: deployment
                  resource_name: cvat-backend
                  namespace: "{{ cvat_namespace }}"
                  min_replicas: 1
                  can_disable: true

                metadata:
                  authentication: jwt_oidc
                  supports_oidc: true
                  oidc_client_id: cvat
                  features:
                    - "Image annotation"
                    - "Video annotation"
                    - "Object detection"
                    - "Semantic segmentation"
                    - "AI-assisted labeling"

                environment_variables:
                  - name: CVAT_API_URL
                    value: "https://{{ cvat_hostname }}"
                  - name: CVAT_USERNAME
                    value: "{{ admin_username }}"
                  - name: CVAT_PASSWORD
                    value: "{{ admin_password }}"

    - name: Verify ConfigMap creation
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: v1
        kind: ConfigMap
        name: thinkube-service-config
        namespace: "{{ cvat_namespace }}"
      register: configmap_info

    - name: Display ConfigMap status
      ansible.builtin.debug:
        msg: "Service discovery ConfigMap created for CVAT"
      when: configmap_info.resources | length > 0

    - name: Update code-server environment variables
      include_role:
        name: code_server_env_update

    - name: Get code-server pod name
      ansible.builtin.shell: |
        {{ kubectl_bin }} get pods -n code-server -l app=code-server -o jsonpath='{.items[0].metadata.name}'
      register: pod_name

    - name: Install CVAT CLI in code-server
      ansible.builtin.shell: |
        {{ kubectl_bin }} exec -n code-server {{ pod_name.stdout }} -- \
          bash -c "pip install --user cvat-cli && echo 'âœ… CVAT CLI installed'"

    - name: Create CVAT config directory
      ansible.builtin.shell: |
        {{ kubectl_bin }} exec -n code-server {{ pod_name.stdout }} -- \
          bash -c "mkdir -p ~/.cvat && echo 'âœ… CVAT config directory created'"

    - name: Create CVAT config file
      ansible.builtin.shell: |
        {{ kubectl_bin }} exec -n code-server {{ pod_name.stdout }} -- \
          bash -c "cat > ~/.cvat/config.yaml << 'EOF'
        auth:
          username: {{ admin_username }}
          password: {{ admin_password }}
        host: https://{{ cvat_hostname }}
        organization: ''
        EOF
        echo 'âœ… CVAT config file created'"
