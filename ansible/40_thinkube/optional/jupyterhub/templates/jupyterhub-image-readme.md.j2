# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

# JupyterHub Custom Image Management

This directory contains files for building and managing custom JupyterHub images.

## How to add packages to JupyterHub

There are three ways to add packages:

### 1. Edit the Dockerfile (system-wide installation)

1. Edit the Dockerfile in this directory
2. Add your packages to the `pip install` command
3. Run the build script: `./rebuild_image.sh`
4. Restart user pods for changes to take effect

### 2. Using the requirements template (system-wide installation)

1. Edit `requirements-template.txt`
2. Add your packages in standard pip requirements format
3. Update the Dockerfile to include these requirements
4. Run the build script: `./rebuild_image.sh`
5. Restart user pods for changes to take effect

### 3. User-specific packages (per-user installation)

Users can install their own packages within their JupyterLab environment:

1. Open a terminal in JupyterLab
2. Use the package manager: `user-package-manager.sh add <package-name>`
3. Run `user-package-manager.sh install` to install immediately
4. Packages are automatically reinstalled when the server restarts

## Rebuilding the image

To rebuild the image after making changes to the Dockerfile:

```bash
./rebuild_image.sh
```

This will:
1. Build a new image with Podman
2. Push it to the Harbor registry
3. Ask if you want to restart user pods

## Image Details

- Registry: {{ harbor_registry }}
- Project: {{ harbor_project }}
- Image: {{ jupyterhub_custom_image }}
- Tag: {{ jupyterhub_custom_image_tag }}
- Full path: {{ harbor_registry }}/{{ harbor_project }}/{{ jupyterhub_custom_image }}:{{ jupyterhub_custom_image_tag }}