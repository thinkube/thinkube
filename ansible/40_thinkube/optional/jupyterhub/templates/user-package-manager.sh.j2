#!/bin/bash

# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

# user-package-manager.sh - A script to manage packages in JupyterLab

USER_PACKAGES_FILE="/home/jovyan/.user-packages"

function print_help() {
    echo "User Package Manager for JupyterLab"
    echo ""
    echo "Usage:"
    echo "  $0 add PACKAGE_NAME    - Add a package to install on restart"
    echo "  $0 remove PACKAGE_NAME - Remove a package from auto-installation"
    echo "  $0 list                - List all packages configured to auto-install"
    echo "  $0 install             - Install all packages from .user-packages"
    echo ""
    echo "Example:"
    echo "  $0 add pandas==2.0.0   - Add specific version of pandas"
    echo "  $0 add 'dask[complete]' - Add dask with all optional dependencies"
    echo ""
}

function add_package() {
    if [ -z "$1" ]; then
        echo "Error: Package name is required"
        return 1
    fi
    
    # Create file if it doesn't exist
    touch "$USER_PACKAGES_FILE"
    
    # Check if package already exists
    if grep -q "^$1$" "$USER_PACKAGES_FILE"; then
        echo "Package '$1' already in list"
    else
        echo "$1" >> "$USER_PACKAGES_FILE"
        echo "Added '$1' to user packages"
    fi
}

function remove_package() {
    if [ -z "$1" ]; then
        echo "Error: Package name is required"
        return 1
    fi
    
    if [ ! -f "$USER_PACKAGES_FILE" ]; then
        echo "No packages file found"
        return 1
    fi
    
    # Remove package if it exists
    if grep -q "^$1$" "$USER_PACKAGES_FILE"; then
        grep -v "^$1$" "$USER_PACKAGES_FILE" > "${USER_PACKAGES_FILE}.tmp"
        mv "${USER_PACKAGES_FILE}.tmp" "$USER_PACKAGES_FILE"
        echo "Removed '$1' from user packages"
    else
        echo "Package '$1' not found in list"
    fi
}

function list_packages() {
    if [ ! -f "$USER_PACKAGES_FILE" ]; then
        echo "No packages file found. No packages will auto-install."
        return 0
    fi
    
    echo "Packages that will be installed on server restart:"
    echo "------------------------------------------------"
    cat "$USER_PACKAGES_FILE"
    echo "------------------------------------------------"
    echo "These packages will be installed with 'pip install --user' on restart"
}

function install_packages() {
    if [ ! -f "$USER_PACKAGES_FILE" ]; then
        echo "No packages file found. Nothing to install."
        return 0
    fi
    
    echo "Installing packages from $USER_PACKAGES_FILE..."
    echo "This may take a few minutes depending on the packages."
    
    # Install packages using pip with user flag
    pip install --user -r "$USER_PACKAGES_FILE"
    
    if [ $? -eq 0 ]; then
        echo "Installation complete! Packages are ready to use."
    else
        echo "Warning: Some packages failed to install. Check the output above for errors."
    fi
}

# Main script execution
case "$1" in
    add)
        add_package "$2"
        ;;
    remove)
        remove_package "$2"
        ;;
    list)
        list_packages
        ;;
    install)
        install_packages
        ;;
    *)
        print_help
        ;;
esac