# Copyright 2025 Alejandro Martínez Corriá and the Thinkube contributors
# SPDX-License-Identifier: Apache-2.0

---
# Variables for Kubernetes deployment

# Network configuration
zerotier_subnet_prefix: "192.168.191."

# MetalLB IP range configuration
# These values come from the dynamically generated inventory
# metallb_ip_start_octet: defined in inventory
# metallb_ip_end_octet: defined in inventory

# Ingress namespace configuration
ingress_namespace: "ingress"
ingress_kn_namespace: "ingress-kn"

# Primary ingress controller configuration
primary_ingress_class: "nginx"
# primary_ingress_ip_octet: defined in inventory
primary_ingress_service: "primary-ingress-ingress-nginx-controller"
primary_ingress_ip: "{{ zerotier_subnet_prefix }}{{ primary_ingress_ip_octet }}"

# Secondary ingress controller configuration
secondary_ingress_class: "nginx-kn"
# secondary_ingress_ip_octet: defined in inventory
secondary_ingress_service: "secondary-ingress-ingress-nginx-controller"

# Domain configuration is inherited from inventory.yaml (thinkube.com)

# Application subdomain configuration
auth_subdomain: "auth"
control_subdomain: "control"
code_subdomain: "code"
registry_subdomain: "registry"
git_subdomain: "git"
argocd_subdomain: "argocd"
argo_subdomain: "argo"
prometheus_subdomain: "prometheus"
jupyter_subdomain: "jupyter"

# SeaweedFS configuration
seaweedfs_namespace: "seaweedfs"
seaweedfs_s3_hostname: "s3.{{ domain_name }}"
seaweedfs_ui_hostname: "seaweedfs.{{ domain_name }}"

# JuiceFS configuration
juicefs_namespace: "juicefs"

# User configuration - inherits from inventory.yaml
# admin_username: "admin" - defined in inventory.yaml
admin_first_name: "Admin"  # Application admin's first name
admin_last_name: "User"  # Application admin's last name
admin_email: "{{ admin_username }}@{{ domain_name }}"  # Admin email address

# Keycloak configuration
keycloak_hostname: "auth.{{ domain_name }}"
keycloak_url: "https://{{ keycloak_hostname }}"
keycloak_realm: "thinkube"  # Using thinkube realm for consistency
thinkube_applications_displayname: "Thinkube Applications"

# Harbor registry configuration
harbor_registry: "registry.{{ domain_name }}"
harbor_namespace: "registry"
harbor_release: "harbor"
harbor_project: "thinkube"
harbor_storage_class: "csi-rawfile-default"
harbor_registry_size: "50Gi"
harbor_database_size: "10Gi"
harbor_robot_name: "thinkube"
harbor_robot_user: "robot$thinkube"
harbor_admin_user: "admin"

# Certificate paths
ssl_cert_dir: "/etc/ssl/{{ domain_name.split('.')[0] }}_certificates"
tls_crt_path: "{{ ssl_cert_dir }}/{{ domain_name }}.fullchain.cer"
tls_key_path: "{{ ssl_cert_dir }}/{{ domain_name }}.key"

# PostgreSQL configuration
postgres_hostname: "postgres.{{ domain_name }}"
postgres_namespace: "postgres"

# PgAdmin configuration
pgadmin_hostname: "pgadmin.{{ domain_name }}"

# Kubernetes configuration
kubeconfig: "/etc/kubernetes/admin.conf"
# kubectl and helm binaries installed by k8s installation playbook
# No sudo required - uses kubeconfig at ~/.kube/config
kubectl_bin: "kubectl"
helm_bin: "/home/{{ system_username }}/.local/bin/helm"

# ArgoCD configuration
argocd_namespace: "argocd"
argocd_hostname: "argocd.{{ domain_name }}"
argocd_grpc_hostname: "argocd-grpc.{{ domain_name }}"
argocd_release_name: "argocd"
argocd_chart_repo: "https://argoproj.github.io/argo-helm"
argocd_chart_name: "argo-cd"
argocd_client_id: "argocd"

# Argo Workflows configuration
argo_namespace: "argo"
argo_domain: "argo.{{ domain_name }}"
argo_grpc_domain: "grpc-argo.{{ domain_name }}"
argo_release_name: "argo-workflows"
argo_chart_repo: "https://argoproj.github.io/argo-helm"
argo_chart_name: "argo-workflows"
argo_events_release_name: "argo-events"
argo_events_chart_name: "argo-events"
argo_service_type: "ClusterIP"
argo_oidc_client_id: "argo"

# DevPi configuration
devpi_namespace: "devpi"
devpi_dashboard_hostname: "devpi.{{ domain_name }}"
devpi_api_hostname: "devpi-api.{{ domain_name }}"
devpi_index_name: "stable"

# Gitea configuration
gitea_namespace: "gitea"
gitea_subdomain: "git"
gitea_hostname: "{{ gitea_subdomain }}.{{ domain_name }}"

# GitHub organization for Thinkube
# github_org is defined in main inventory.yaml generated by installer

# Container registry settings (for all services)
# registry_subdomain is already defined above in line 33
registry_domain: "{{ registry_subdomain }}.{{ domain_name }}"

# Qdrant configuration
qdrant_namespace: "qdrant"
qdrant_hostname: "qdrant.{{ domain_name }}"
qdrant_dashboard_hostname: "qdrant-dashboard.{{ domain_name }}"

# Monitoring configuration
monitoring_namespace: "monitoring"
prometheus_hostname: "prometheus.{{ domain_name }}"
prometheus_storage_size: "20Gi"
prometheus_storage_class: "csi-rawfile-default"